{"ast":null,"code":"var _jsxFileName = \"/home/rgukt123/blog_app/client/src/components/singlePost/SinglePost.jsx\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n//import { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n  var _user;\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n  // const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: {\n          username: user.username\n        }\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc\n      });\n      setUpdateMode(false);\n    } catch (err) {}\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: PF + post.photo,\n        alt: \"\",\n        className: \"singlePostImg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [title, post.username === ((_user = user) === null || _user === void 0 ? void 0 : _user.username) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostAuthor\",\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/?user=${post.username}`,\n            className: \"link\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [\" \", post.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"singlePostDate\",\n          children: new Date(post.createdAt).toDateString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDescInput\",\n        value: desc,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"UKgbPArqPafk5Ye89raEtFIrFq0=\", false, function () {\n  return [useLocation];\n});\n_c = SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["axios","useContext","useEffect","useState","useLocation","Link","jsxDEV","_jsxDEV","SinglePost","_s","_user","location","path","pathname","split","post","setPost","PF","title","setTitle","desc","setDesc","updateMode","setUpdateMode","getPost","res","get","data","handleDelete","delete","_id","username","user","window","replace","err","handleUpdate","put","className","children","photo","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","autoFocus","onChange","e","target","onClick","to","Date","createdAt","toDateString","_c","$RefreshReg$"],"sources":["/home/rgukt123/blog_app/client/src/components/singlePost/SinglePost.jsx"],"sourcesContent":["import axios from \"axios\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n//import { Context } from \"../../context/Context\";\nimport \"./singlePost.css\";\n\nexport default function SinglePost() {\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/images/\";\n // const { user } = useContext(Context);\n  const [title, setTitle] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [updateMode, setUpdateMode] = useState(false);\n\n  useEffect(() => {\n    const getPost = async () => {\n      const res = await axios.get(\"/posts/\" + path);\n      setPost(res.data);\n      setTitle(res.data.title);\n      setDesc(res.data.desc);\n    };\n    getPost();\n  }, [path]);\n\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${post._id}`, {\n        data: { username: user.username },\n      });\n      window.location.replace(\"/\");\n    } catch (err) {}\n  };\n\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`/posts/${post._id}`, {\n        username: user.username,\n        title,\n        desc,\n      });\n      setUpdateMode(false)\n    } catch (err) {}\n  };\n\n  return (\n    <div className=\"singlePost\">\n      <div className=\"singlePostWrapper\">\n        {post.photo && (\n          <img src={PF + post.photo} alt=\"\" className=\"singlePostImg\" />\n        )}\n        {updateMode ? (\n          <input\n            type=\"text\"\n            value={title}\n            className=\"singlePostTitleInput\"\n            autoFocus\n            onChange={(e) => setTitle(e.target.value)}\n          />\n        ) : (\n          <h1 className=\"singlePostTitle\">\n            {title}\n            {post.username === user?.username && (\n              <div className=\"singlePostEdit\">\n                <i\n                  className=\"singlePostIcon far fa-edit\"\n                  onClick={() => setUpdateMode(true)}\n                ></i>\n                <i\n                  className=\"singlePostIcon far fa-trash-alt\"\n                  onClick={handleDelete}\n                ></i>\n              </div>\n            )}\n          </h1>\n        )}\n        <div className=\"singlePostInfo\">\n          <span className=\"singlePostAuthor\">\n            Author:\n            <Link to={`/?user=${post.username}`} className=\"link\">\n              <b> {post.username}</b>\n            </Link>\n          </span>\n          <span className=\"singlePostDate\">\n            {new Date(post.createdAt).toDateString()}\n          </span>\n        </div>\n        {updateMode ? (\n          <textarea\n            className=\"singlePostDescInput\"\n            value={desc}\n            onChange={(e) => setDesc(e.target.value)}\n          />\n        ) : (\n          <p className=\"singlePostDesc\">{desc}</p>\n        )}\n        {updateMode && (\n          <button className=\"singlePostButton\" onClick={handleUpdate}>\n            Update\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}